# ~/.bashrc: executed by bash(1) for non-login shells.

if [[ $- == *i* ]]; then
    # Code à exécuter si le shell est en mode interactif
    PS1='\[\033[01;31m\](Singularity)\[\033[00m\] \[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    
    # enable color support of ls and also add handy aliases
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
    
    # colored GCC warnings and errors
    #export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
    
    # some more ls aliases
    alias ll='ls -alF'
    alias la='ls -A'
    alias l='ls -CF'
    alias emacs='emacs -nw'
    
    
    # append to the history file, don't overwrite it
    shopt -s histappend
    
    # for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
    HISTSIZE=; export HISTSIZE # unlimited history list
    HISTFILESIZE=; export HISTFILESIZE # unlimited history bash file
    HISTFILE=/home/$USER/.bash_eternal_history; export HISTFILE # change the file location because certain bash sessions truncate .bash_history file upon close
    HISTCONTROL=ignoreboth; export HISTCONTROL # do not store commands starting from space and duplicates
    HISTIGNORE='l:ll:lt:ls:bg:fg:mc:history:dwn:uls:data:work:mp3:ls -lah'; export HISTIGNORE # do not store history commands like: ls, bg etc.
    
    
    # don't put duplicate lines in the history. See bash(1) for more options
    # ... or force ignoredups and ignorespace
    HISTTIMEFORMAT='%F %T '; export HISTTIMEFORMAT
    PROMPT_COMMAND='history -a'; export PROMPT_COMMAND # record command into histroy and recall them "as you issue it"
    
    # up arrow search
    bind '"\e[A"':history-search-backward
    bind '"\e[B"':history-search-forward

fi


# tar a directory with the date to save it
save() {
    TARDATE=`date +'D%Y%m%dT%H%M'`
    DIRTOTAR=`echo "${@}"`
    TARNAME=`echo "${@}" | cut -d '.' -f1`
    tar -czvf ./"$TARNAME"_"$TARDATE".tar "$DIRTOTAR"
}

# reducepdf
pdfreduction() {
    OutputFile=`echo "${@}" | cut -d '.' -f1`"_gs.pdf"
    gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -r400 -dNOPAUSE -dQUIET -dBATCH -sOutputFile=$OutputFile "${@}"
}

# tempo2
tempo2_plk() {
    tempo2 -clkdir /usr/local/pulsar/clk_dir/ -gr plk -nspr 1 -nofit -nobs 30000 -f $1 -setup /usr/local/pulsar/plk_setup_fr606_embrace.dat $2
}

if [ -f ~/.bash_singular ]; then
    . ~/.bash_singular
fi
