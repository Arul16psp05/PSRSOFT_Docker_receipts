# ~/.bashrc: executed by bash(1) for non-login shells.

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
    else
    color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
alias ls='ls -G'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'


# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=; export HISTSIZE # unlimited history list
HISTFILESIZE=; export HISTFILESIZE # unlimited history bash file
HISTFILE=~/.bash_eternal_history; export HISTFILE # change the file location because certain bash sessions truncate .bash_history file upon close
HISTCONTROL=ignoreboth; export HISTCONTROL # do not store commands starting from space and duplicates
HISTIGNORE='l:ll:lt:ls:bg:fg:mc:history:dwn:uls:data:work:mp3:ls -lah'; export HISTIGNORE # do not store history commands like: ls, bg etc.


# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTTIMEFORMAT='%F %T '; export HISTTIMEFORMAT
PROMPT_COMMAND='history -a'; export PROMPT_COMMAND # record command into histroy and recall them "as you issue it"

# up arrow search
bind '"\e[A"':history-search-backward
bind '"\e[B"':history-search-forward

# tar a directory with the date to save it
function save() {
TARDATE=`date +'D%Y%m%dT%H%M'`
DIRTOTAR=`echo ${@}`
TARNAME=`echo ${@} | cut -d '.' -f1`
tar -czvf ./"$TARNAME"_"$TARDATE".tar "$DIRTOTAR"
}

# reducepdf
function pdfreduction() {
OutputFile=`echo ${@} | cut -d '.' -f1`"_gs.pdf"
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -r400 -dNOPAUSE -dQUIET -dBATCH -sOutputFile=$OutputFile ${@}
}

# tempo2
function tempo2_plk() {
tempo2 -clkdir /home/root/pulsar/clk_dir/ -gr plk -nspr 1 -nofit -nobs 30000 -f $1 -setup /home/root/pulsar/plk_setup_fr606_embrace.dat $2
}

alias ll='ls -l'
alias lh='ls -lhtr'
